-- Database Creation

CREATE database hostelMS;

use hostelMS;

CREATE TABLE stud_info (
	first_name	VARCHAR(20)	DEFAULT ''	NOT NULL,
    last_name	VARCHAR(20)	DEFAULT ''	NOT NULL,
    stu_id		CHAR(13)	DEFAULT ''	NOT NULL,
    PRIMARY KEY (stu_id)
    );
    
CREATE TABLE stud_mob_info (
    stu_id		CHAR(13)	DEFAULT ''	NOT NULL,
    mob_no		NUMERIC(10)	NOT NULL CHECK((mob_no > 1000000000) AND (mob_no <= 9999999999)),
    PRIMARY KEY (stu_id, mob_no),
    FOREIGN KEY (stu_id) REFERENCES STUD_INFO(stu_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

CREATE TABLE gn (
	room_no	NUMERIC(4) DEFAULT '0000'	NOT NULL CHECK(room_no >= 1000),
    avail	NUMERIC(1) DEFAULT '1'		NOT NULL CHECK(avail = 0 OR avail = 1),	
    stu_id	CHAR(13) UNIQUE,
    PRIMARY KEY (room_no)
	);

CREATE TABLE kr (
	room_no		NUMERIC(4) 	DEFAULT '0000'	NOT NULL CHECK(room_no >= 1000) UNIQUE,
	avail	NUMERIC(1) DEFAULT '1'		NOT NULL CHECK(avail = 0 OR avail = 1),	
    stu_id	CHAR(13) UNIQUE,
    PRIMARY KEY (room_no)
	);
    
CREATE TABLE rm (
	room_no		NUMERIC(4) 	DEFAULT '0000'	NOT NULL CHECK(room_no >= 1000) UNIQUE,
	avail	NUMERIC(1) DEFAULT '1'		NOT NULL CHECK(avail = 0 OR avail = 1),	
    stu_id	CHAR(13) UNIQUE,
    PRIMARY KEY (room_no)
	);
    
    
CREATE TABLE member_info (
	head_sid		CHAR(13)		DEFAULT ''	NOT NULL,
    member_sid		CHAR(13)		DEFAULT	'' 	NOT NULL,
    PRIMARY KEY (member_sid),
	FOREIGN KEY (head_sid) REFERENCES STUD_INFO(stu_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (member_sid) REFERENCES STUD_INFO(stu_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

CREATE TABLE hostel_info (
	hostel_id	VARCHAR(2)		DEFAULT ''	NOT NULL,
    vacant		INT				DEFAULT '000'	NOT NULL,
    PRIMARY KEY (hostel_id)
    );
    
CREATE TABLE preference (
	head_sid	CHAR(13)		DEFAULT ''	NOT NULL,
    wing_size	NUMERIC(1)		DEFAULT	'0' NOT NULL CHECK(WING_SIZE >=1 AND WING_SIZE <=8),
    pref1		CHAR(2)			DEFAULT ''	NOT NULL,
    pref2		CHAR(2)			DEFAULT ''	NOT NULL,
    pref3		CHAR(2)			DEFAULT ''	NOT NULL,
    PRIMARY KEY (head_sid),
	FOREIGN KEY (head_sid) REFERENCES STUD_INFO(stu_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (pref1) REFERENCES hostel_info(hostel_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (pref2) REFERENCES hostel_info(hostel_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (pref3) REFERENCES hostel_info(hostel_id) ON DELETE CASCADE ON UPDATE CASCADE    
    );

    
-- INSERTING DATA IN TABLES
    
INSERT INTO stud_info VALUES ("Shreyansh", "Agarwal", "2018A7PS0015P");
INSERT INTO stud_info VALUES ("Aakash", "Gupta", "2018B3A70025P");
INSERT INTO stud_info VALUES ("Ram", "Mishra", "2018A7PS0057P");
INSERT INTO stud_info VALUES ("Mohit", "Chauhan", "2018B3A50152P");
INSERT INTO stud_info VALUES ("Archit", "Jain", "2018B1A20175P");
INSERT INTO stud_info VALUES ("Shrey", "Bansal", "2018A7PS0225P");
INSERT INTO stud_info VALUES ("Bhavesh", "Mall", "2018B3A70342P");
INSERT INTO stud_info VALUES ("Shivam", "Nayak", "2018A4PS0445P");
INSERT INTO stud_info VALUES ("Arihant", "Jain", "2018A3PS0483P");
INSERT INTO stud_info VALUES ("Nihal", "Sarin", "2018A7PS0558P");
INSERT INTO stud_info VALUES ("Akshay", "Gaur", "2019A4PS0050P");
INSERT INTO stud_info VALUES ("Nishant", "Tanwar", "2019A7PS0085P");
INSERT INTO stud_info VALUES ("Virat", "Kohli", "2019B4A30116P");
INSERT INTO stud_info VALUES ("Sachin", "Khanna", "2019A7PS0144P");
INSERT INTO stud_info VALUES ("Mohz", "Khan", "2019A4PS0315P");
INSERT INTO stud_info VALUES ("Shobhit", "Jain", "2019B3A70385P");
INSERT INTO stud_info VALUES ("Vipul", "Walunj", "2019B4A70448P");
INSERT INTO stud_info VALUES ("Kunal", "Jain", "2019A5PS0551P");
INSERT INTO stud_info VALUES ("Tara", "Singh", "2019A4PS0615P");
INSERT INTO stud_info VALUES ("Sahil", "Gupta", "2019B2A40665P");
INSERT INTO stud_info VALUES ("Kshitij", "Chauhan", "2020B3A40062P");
INSERT INTO stud_info VALUES ("Archit", "Khanna", "2020B3A40175P");
INSERT INTO stud_info VALUES ("Shreyansh", "Bansal", "2020A4PS0225P");
INSERT INTO stud_info VALUES ("Ujjwal", "Bhansali", "2020A4PS0285P");
INSERT INTO stud_info VALUES ("Shyam", "Chauhan", "2020B3A40452P");
INSERT INTO stud_info VALUES ("Arshit", "Jain", "2020B2A70555P");
INSERT INTO stud_info VALUES ("Shubham", "Bansal", "2020A7PS0668P");
INSERT INTO stud_info VALUES ("Hemant", "Jaiswal", "2020A5PS0681P");
INSERT INTO stud_info VALUES ("Sujay", "Singh", "2020A6PS0708P");
INSERT INTO stud_info VALUES ("Shivraj", "Gupta", "2020B2A40712P");
INSERT INTO stud_info VALUES ("Dishant", "Kapoor", "2021A7PS0016P");
INSERT INTO stud_info VALUES ("Aakash", "Sinha", "2021B3A40055P");
INSERT INTO stud_info VALUES ("Ramesh", "Mishra", "2021A4PS0155P");
INSERT INTO stud_info VALUES ("Divraj", "Singh", "2021B3A70252P");
INSERT INTO stud_info VALUES ("Chirag", "Agarwal", "2021A4PS0285P");
INSERT INTO stud_info VALUES ("Swapnil", "Manhotra", "2021B3A30444P");
INSERT INTO stud_info VALUES ("Jayesh", "Kadra", "2021A7PS0557P");
INSERT INTO stud_info VALUES ("Abhimanyu", "Singh", "2021B3A10605P");
INSERT INTO stud_info VALUES ("Anshu", "Bisht", "2021A3PS0666P");
INSERT INTO stud_info VALUES ("Ish", "Gupta", "2021B3A70668P");

INSERT INTO stud_mob_info VALUES ("2019B3A70385P", "9521458759");
INSERT INTO stud_mob_info VALUES ("2019B3A70385P", "9596458759");
INSERT INTO stud_mob_info VALUES ("2019A7PS0144P", "9561512195");
INSERT INTO stud_mob_info VALUES ("2019A7PS0144P", "9114845879");

INSERT INTO hostel_info VALUES ('GN', 5), ('KR', 3), ('RM', 10);

INSERT INTO gn(room_no) VALUES (1100), (1101), (1102), (1103), (1104);
INSERT INTO kr(room_no) VALUES (1100), (1101), (1102);
INSERT INTO rm(room_no) VALUES (1100), (1101), (1102), (1103), (1104), (1105), (1106), (1107), (1108), (1109);

INSERT INTO MEMBER_INFO VALUES("2019A7PS0144P", "2019A7PS0144P");
INSERT INTO MEMBER_INFO VALUES("2019A7PS0144P", "2021A7PS0557P");
INSERT INTO MEMBER_INFO VALUES("2019A7PS0144P", "2021B3A70668P");
INSERT INTO MEMBER_INFO VALUES("2019A4PS0050P", "2019A4PS0050P");
INSERT INTO MEMBER_INFO VALUES("2019A4PS0050P", "2021A7PS0016P");
INSERT INTO MEMBER_INFO VALUES("2019A4PS0050P", "2018B3A70025P");
INSERT INTO MEMBER_INFO VALUES("2021A3PS0666P", "2021A3PS0666P");
INSERT INTO MEMBER_INFO VALUES("2021A3PS0666P", "2019A4PS0315P");

-- DML OPERATIONS

delimiter |
CREATE TRIGGER PREF AFTER INSERT ON PREFERENCE
 FOR EACH ROW
 BEGIN
	DECLARE A INT;
    SET A = NEW.WING_SIZE;
    IF ((NEW.PREF1 = "GN") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "GN"))) THEN 
WHILE (A > 0) DO
UPDATE GN SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF1;

	ELSEIF ((NEW.PREF1 = "KR") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "KR"))) THEN 
WHILE (A > 0) DO
UPDATE KR SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF1;

	ELSEIF ((NEW.PREF1 = "RM") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "RM"))) THEN 
WHILE (A > 0) DO
UPDATE RM SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF1;

	ELSEIF ((NEW.PREF2 = "GN") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "GN"))) THEN 
WHILE (A > 0) DO
UPDATE GN SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF2;

	ELSEIF ((NEW.PREF2 = "KR") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "KR"))) THEN 
WHILE (A > 0) DO
UPDATE KR SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF2;

	ELSEIF ((NEW.PREF2 = "RM") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "RM"))) THEN 
WHILE (A > 0) DO
UPDATE RM SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF2;

	ELSEIF ((NEW.PREF3 = "GN") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "GN"))) THEN 
WHILE (A > 0) DO
UPDATE GN SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF3;

	ELSEIF ((NEW.PREF3 = "KR") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "KR"))) THEN 
WHILE (A > 0) DO
UPDATE KR SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF3;

	ELSEIF((NEW.PREF3 = "RM") AND (NEW.WING_SIZE <= (SELECT VACANT FROM HOSTEL_INFO WHERE HOSTEL_ID = "RM"))) THEN 
WHILE (A > 0) DO
UPDATE RM SET AVAIL = 0, STU_ID = (SELECT MEMBER_SID FROM (SELECT MEMBER_SID, ROW_NUMBER() OVER (ORDER BY MEMBER_SID) AS ROWNUMB FROM (SELECT MEMBER_SID FROM MEMBER_INFO WHERE HEAD_SID = NEW.HEAD_SID) AS U) AS P WHERE ROWNUMB = A) WHERE AVAIL = 1 LIMIT 1;
SET A = A-1;
END WHILE;
UPDATE HOSTEL_INFO SET VACANT = VACANT - NEW.WING_SIZE WHERE HOSTEL_ID = NEW.PREF3;
END IF;

END;
|
delimiter ;


SELECT * FROM MEMBER_INFO;

INSERT INTO PREFERENCE VALUES ("2019A4PS0050P", "3", "KR", "GN", "RM");

SELECT * from KR;
SELECT * FROM GN;
SELECT * FROM RM;
SELECT * FROM HOSTEL_INFO;

INSERT INTO PREFERENCE VALUES ("2021A3PS0666P", "2", "KR", "GN", "RM");

SELECT * from KR;
SELECT * FROM GN;
SELECT * FROM RM;
SELECT * FROM HOSTEL_INFO;

INSERT INTO PREFERENCE VALUES ("2019A7PS0144P", "3", "KR", "GN", "RM");

SELECT * from KR;
SELECT * FROM GN;
SELECT * FROM RM;
SELECT * FROM HOSTEL_INFO;









-- Dropping Tables and Database

DROP TABLE stud_mob_info;
DROP TABLE GN;
DROP TABLE KR;
DROP TABLE RM;
DROP TABLE member_info;
DROP TABLE preference;
DROP TABLE hostel_info;
DROP TRIGGER PREF;
DROP DATABASE hostelms;
DROP TABLE stud_info;

    
    
    
    